---
import { findChapter } from "@utils/bible.astro";

interface Params {
  bookShortName: string;
  chapterNumber: string;
  startingVerse: string;
  endingVerse: string;
  versionIdentifier: string;
  language: string;
}

export const prerender = false;

const {
  bookShortName,
  chapterNumber,
  startingVerse,
  endingVerse,
  versionIdentifier,
  language,
} = Astro.params as unknown as Params;

const chapter = await findChapter({
  language,
  versionIdentifier,
  bookShortName,
  chapterNumber,
});

const startingVerseInt = parseInt(startingVerse);
const endingVerseInt = parseInt(endingVerse);

const verses = chapter.verse.filter((verse) => {
  const verseNumber = verse["@_osisID"].split(".")[2];
  if (!verseNumber) throw new Error("Lol IDK");
  const verseNumberInt = parseInt(verseNumber);
  return verseNumberInt >= startingVerseInt && verseNumberInt <= endingVerseInt;
});

const passage = `${bookShortName} ${chapterNumber}:${startingVerse}-${endingVerse}`;
---

<article>
  <h1>{passage}</h1>
  {
    verses.map((verse) => {
      return <p>{verse["#text"]}</p>;
    })
  }
</article>
