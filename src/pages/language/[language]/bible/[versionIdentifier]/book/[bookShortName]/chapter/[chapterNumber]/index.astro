---
import { findChapter, osisToEn } from "@utils/bible.astro";
import Chapter from "@components/Chapter.astro";

export const prerender = false;

// type Params = InferGetStaticParamsType<typeof getStaticPaths>;
// type Props = InferGetStaticPropsType<typeof getStaticPaths>;

// export const getStaticPaths = (async () => {
//   const bibles = await loadBibles();
//   return bibles.flatMap((bible) => {
//     return bible.osisText.div.flatMap((book) => {
//       const bookShortName = book["@_osisID"];
//       if (!Array.isArray(book.chapter)) {
//         return [
//           {
//             params: {
//               bookShortName,
//               chapterNumber: "1",
//               versionIdentifier: getNameFromBible(bible),
//             },
//           },
//         ];
//       }
//       return book.chapter.map((_chapter, chapterIndex) => {
//         const chapterNumber = (chapterIndex + 1).toString();
//         return {
//           params: {
//             bookShortName,
//             chapterNumber,
//             versionIdentifier: getNameFromBible(bible),
//           },
//         };
//       });
//     });
//   });
// }) satisfies GetStaticPaths;

interface Params {
  language: string;
  versionIdentifier: string;
  bookShortName: string;
  chapterNumber: string;
}

const { bookShortName, chapterNumber, versionIdentifier, language } =
  Astro.params as unknown as Params;

const chapter = await findChapter({
  language,
  versionIdentifier,
  bookShortName,
  chapterNumber,
});
---

<div>
  <article>
    <Chapter
      language={language}
      versionIdentifier={versionIdentifier}
      chapter={chapter}
    >
      <h1>{osisToEn(chapter["@_osisID"])}</h1>
    </Chapter>
  </article>
</div>
