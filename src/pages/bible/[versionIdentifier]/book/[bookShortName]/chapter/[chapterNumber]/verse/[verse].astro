---
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
} from "astro";
import { findVerse, loadBibles, getNameFromBible } from "@utils/bible.astro";
import osisToEn from "bible-reference-formatter";

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export const getStaticPaths = (async () => {
  const bibles = await loadBibles();
  return bibles.flatMap((bible) => {
    return bible.osisText.div.flatMap((book) => {
      const bookShortName = book["@_osisID"];
      if (!Array.isArray(book.chapter)) {
        const chapterNumber = "1";
        return book.chapter.verse.map((verse) => {
          const verseNumber = verse["@_osisID"].split(".")[2];
          if (!verseNumber)
            throw new Error(`Unable to parse verse ID ${verse["@_osisID"]}`);
          return {
            params: {
              bookShortName,
              chapterNumber,
              verse: verseNumber,
              versionIdentifier: getNameFromBible(bible),
            },
          };
        });
      }
      return book.chapter.flatMap((chapter, chapterIndex) => {
        const chapterNumber = (chapterIndex + 1).toString();
        return chapter.verse.map((verse) => {
          const verseNumber = verse["@_osisID"].split(".")[2];
          if (!verseNumber)
            throw new Error(`Unable to parse verse ID ${verse["@_osisID"]}`);
          return {
            params: {
              bookShortName,
              chapterNumber,
              verse: verseNumber,
              versionIdentifier: getNameFromBible(bible),
            },
          };
        });
      });
    });
  });
}) satisfies GetStaticPaths;

const {
  bookShortName,
  chapterNumber,
  verse: verseNumber,
  versionIdentifier,
} = Astro.params as unknown as Params;

const verse = await findVerse({
  versionIdentifier,
  bookShortName,
  chapterNumber,
  verseNumber,
});
---

<article>
  <h1>{osisToEn("nlt-long", verse["@_osisID"])}</h1>
  <p>{verse["#text"]}</p>
</article>
