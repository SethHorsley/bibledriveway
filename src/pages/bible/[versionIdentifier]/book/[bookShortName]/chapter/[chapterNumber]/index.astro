---
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
} from "astro";
import { findChapter, loadBibles, getNameFromBible } from "@utils/bible.astro";
import Chapter from "@components/Chapter.astro";
import osisToEn from "bible-reference-formatter";

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export const getStaticPaths = (async () => {
  const bibles = await loadBibles();
  return bibles.flatMap((bible) => {
    return bible.osisText.div.flatMap((book) => {
      const bookShortName = book["@_osisID"];
      if (!Array.isArray(book.chapter)) {
        return [
          {
            params: {
              bookShortName,
              chapterNumber: "1",
              versionIdentifier: getNameFromBible(bible),
            },
          },
        ];
      }
      return book.chapter.map((_chapter, chapterIndex) => {
        const chapterNumber = (chapterIndex + 1).toString();
        return {
          params: {
            bookShortName,
            chapterNumber,
            versionIdentifier: getNameFromBible(bible),
          },
        };
      });
    });
  });
}) satisfies GetStaticPaths;

const { bookShortName, chapterNumber, versionIdentifier } =
  Astro.params as unknown as Params;

const chapter = await findChapter({
  versionIdentifier,
  bookShortName,
  chapterNumber,
});
---

<div>
  <article>
    <Chapter versionIdentifier={versionIdentifier} chapter={chapter}>
      <h1>{osisToEn("nlt-long", chapter["@_osisID"])}</h1>
    </Chapter>
  </article>
</div>
